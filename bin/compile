#!/usr/bin/env bash

# If this var is set to true later on,
# then elixir and rebar will be rebuilt
erlang_changed=false
rebar_changed=false
elixir_changed=false

build_pack_path=$(cd $(dirname $(dirname $0)); pwd)

# Ensure dirs are present
mkdir -p $1 $2 $3

build_path=$(cd $1 && pwd)
cache_path=$(cd $2 && pwd)
env_path=$(cd $3 && pwd)


source ${build_pack_path}/lib/path_funcs.sh
source ${build_pack_path}/lib/misc_funcs.sh
source ${build_pack_path}/lib/erlang_funcs.sh
source ${build_pack_path}/lib/elixir_funcs.sh
source ${build_pack_path}/lib/app_funcs.sh

mkdir $(platform_tools_path)

load_config
export_env_vars
export_mix_env

check_stack
clean_cache

download_erlang
install_erlang

download_elixir
install_elixir
restore_mix
install_hex
install_rebar

# deprecated_hook, here for backwards compatibility
pre_compile_hook

restore_app
hook_pre_app_dependencies
log_appsignal_directory "before app_dependencies"
app_dependencies
log_appsignal_directory "before copy_hex"
copy_hex

log_appsignal_directory "before hook_pre_compile"
hook_pre_compile
log_appsignal_directory "before compile_app"
compile_app
log_appsignal_directory "before hook_post_compile"
hook_post_compile

log_appsignal_directory "before backup_app"
backup_app
log_appsignal_directory "before backup_mix"
backup_mix
log_appsignal_directory "before write_profile_d_script"
write_profile_d_script
log_appsignal_directory "before write_export"
write_export

# deprecated_hook, here for backwards compatibility
log_appsignal_directory "before post_compile_hook"
post_compile_hook
log_appsignal_directory "end"
